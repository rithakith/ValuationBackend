// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ValuationBackend.Data;

#nullable disable

namespace ValuationBackend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250526071415_CreateAssetsTable")]
    partial class CreateAssetsTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LandAquisitionMasterFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("MasterFileNo")
                        .HasColumnType("integer");

                    b.Property<string>("MasterFilesRefNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PlanNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PlanType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RequestingAuthorityReferenceNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("LandAquisitionMasterFiles");
                });

            modelBuilder.Entity("ValuationBackend.Models.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AssetNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Description")
                        .HasColumnType("integer");

                    b.Property<bool>("IsRatingCard")
                        .HasColumnType("boolean");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<string>("RdSt")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("RequestId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Ward")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.HasIndex("RequestId");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("ValuationBackend.Models.BuildingRatesLA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AssessmentNumber")
                        .HasColumnType("text");

                    b.Property<string>("ConstructedBy")
                        .HasColumnType("text");

                    b.Property<string>("Cost")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DescriptionOfProperty")
                        .HasColumnType("text");

                    b.Property<string>("FloorAreaSQFT")
                        .HasColumnType("text");

                    b.Property<string>("LocationLatitude")
                        .HasColumnType("text");

                    b.Property<string>("LocationLongitude")
                        .HasColumnType("text");

                    b.Property<string>("MasterFileId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Owner")
                        .HasColumnType("text");

                    b.Property<string>("RatePerSQFT")
                        .HasColumnType("text");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.Property<int>("ReportId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("YearOfConstruction")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("BuildingRatesLA");
                });

            modelBuilder.Entity("ValuationBackend.Models.ConditionReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AccessCategory")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AccessCategoryDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AcquiredExtent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AcquiringOfficerSignature")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AcquisitionName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AssessmentNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AtLotNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AtPlanNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BoundaryBottom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BoundaryEast")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BoundaryNorth")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BoundarySouth")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BoundaryWest")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BuildingDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("BuildingInfo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ChiefValuerRepresentativeSignature")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DateOfSection3BA")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DatePrepared")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DepthOfLand")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DescriptionOfLand")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DetailsOfBusiness")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Frontage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("GramasewakaSignature")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LandUseDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LandUseType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LevelWithAccess")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MasterFileId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameOfTheLand")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NameOfTheVillage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OtherConstructionsDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OtherConstructionsInfo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PlantationDetails")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PpCadLotNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PpCadNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ReportId")
                        .HasColumnType("integer");

                    b.Property<string>("RoadName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("ConditionReports");
                });

            modelBuilder.Entity("ValuationBackend.Models.ImageData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ImageBase64")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReportId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ImageData");
                });

            modelBuilder.Entity("ValuationBackend.Models.InspectionBuilding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AgeYears")
                        .HasColumnType("text");

                    b.Property<string>("BathroomToilet")
                        .HasColumnType("text");

                    b.Property<string>("BathroomToiletDoorsFittings")
                        .HasColumnType("text");

                    b.Property<string>("BuildingCategory")
                        .HasColumnType("text");

                    b.Property<string>("BuildingClass")
                        .HasColumnType("text");

                    b.Property<string>("BuildingConditions")
                        .HasColumnType("text");

                    b.Property<string>("BuildingId")
                        .HasColumnType("text");

                    b.Property<string>("BuildingName")
                        .HasColumnType("text");

                    b.Property<string>("Ceiling")
                        .HasColumnType("text");

                    b.Property<string>("Condition")
                        .HasColumnType("text");

                    b.Property<string>("Conveniences")
                        .HasColumnType("text");

                    b.Property<string>("Design")
                        .HasColumnType("text");

                    b.Property<string>("DetailOfBuilding")
                        .HasColumnType("text");

                    b.Property<string>("Door")
                        .HasColumnType("text");

                    b.Property<string>("ExpectedLifePeriodYears")
                        .HasColumnType("text");

                    b.Property<string>("FloorFinisher")
                        .HasColumnType("text");

                    b.Property<string>("FloorStructure")
                        .HasColumnType("text");

                    b.Property<string>("FoundationStructure")
                        .HasColumnType("text");

                    b.Property<string>("HandRail")
                        .HasColumnType("text");

                    b.Property<int>("InspectionReportId")
                        .HasColumnType("integer");

                    b.Property<string>("NatureOfConstruction")
                        .HasColumnType("text");

                    b.Property<string>("NoOfFloorsAboveGround")
                        .HasColumnType("text")
                        .HasColumnName("NoOfFloorsAboveGround");

                    b.Property<string>("NoOfFloorsBelowGround")
                        .HasColumnType("text")
                        .HasColumnName("NoOfFloorsBelowGround");

                    b.Property<string>("OtherDoors")
                        .HasColumnType("text");

                    b.Property<string>("PantryCupboard")
                        .HasColumnType("text");

                    b.Property<string>("ParkingSpace")
                        .HasColumnType("text");

                    b.Property<string>("RoofFinisher")
                        .HasColumnType("text");

                    b.Property<string>("RoofFrame")
                        .HasColumnType("text");

                    b.Property<string>("RoofMaterial")
                        .HasColumnType("text");

                    b.Property<string>("Services")
                        .HasColumnType("text");

                    b.Property<string>("Structure")
                        .HasColumnType("text");

                    b.Property<string>("WallFinisher")
                        .HasColumnType("text");

                    b.Property<string>("WallStructure")
                        .HasColumnType("text");

                    b.Property<string>("Window")
                        .HasColumnType("text");

                    b.Property<string>("WindowProtection")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("InspectionReportId");

                    b.ToTable("InspectionBuildings");
                });

            modelBuilder.Entity("ValuationBackend.Models.InspectionReport", b =>
                {
                    b.Property<int>("InspectionReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("InspectionReportId"));

                    b.Property<string>("DetailsOfAssestsInventoryItems")
                        .HasColumnType("text")
                        .HasColumnName("DetailsOfAssestsInventoryItems");

                    b.Property<string>("DetailsOfBusiness")
                        .HasColumnType("text");

                    b.Property<string>("District")
                        .HasColumnType("text");

                    b.Property<string>("DsDivision")
                        .HasColumnType("text");

                    b.Property<string>("GnDivision")
                        .HasColumnType("text");

                    b.Property<DateTime>("InspectionDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("MasterFileId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MasterFileRefNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OtherConstructionDetails")
                        .HasColumnType("text");

                    b.Property<string>("OtherInformation")
                        .HasColumnType("text");

                    b.Property<string>("Province")
                        .HasColumnType("text");

                    b.Property<string>("Remark")
                        .HasColumnType("text");

                    b.Property<int>("ReportId")
                        .HasColumnType("integer");

                    b.Property<string>("Village")
                        .HasColumnType("text");

                    b.HasKey("InspectionReportId");

                    b.HasIndex("ReportId");

                    b.ToTable("InspectionReports");
                });

            modelBuilder.Entity("ValuationBackend.Models.LMBuildingRates", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AssessmentNumber")
                        .HasColumnType("text");

                    b.Property<string>("ConstructedBy")
                        .HasColumnType("text");

                    b.Property<string>("Cost")
                        .HasColumnType("text");

                    b.Property<string>("DescriptionOfProperty")
                        .HasColumnType("text");

                    b.Property<string>("FloorArea")
                        .HasColumnType("text");

                    b.Property<string>("LocationLatitude")
                        .HasColumnType("text");

                    b.Property<string>("LocationLongitude")
                        .HasColumnType("text");

                    b.Property<string>("MasterFileRefNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Owner")
                        .HasColumnType("text");

                    b.Property<string>("RatePerSQFT")
                        .HasColumnType("text");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.Property<int>("ReportId")
                        .HasColumnType("integer");

                    b.Property<string>("YearOfConstruction")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("LMBuildingRates");
                });

            modelBuilder.Entity("ValuationBackend.Models.LMPastValuation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DateOfValuation")
                        .HasColumnType("text");

                    b.Property<string>("Extent")
                        .HasColumnType("text");

                    b.Property<string>("FileNo_GnDivision")
                        .HasColumnType("text");

                    b.Property<string>("LocationLatitude")
                        .HasColumnType("text");

                    b.Property<string>("LocationLongitude")
                        .HasColumnType("text");

                    b.Property<string>("MasterFileRefNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PlanOfParticulars")
                        .HasColumnType("text");

                    b.Property<string>("PurposeOfValuation")
                        .HasColumnType("text");

                    b.Property<string>("Rate")
                        .HasColumnType("text");

                    b.Property<string>("RateType")
                        .HasColumnType("text");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.Property<int>("ReportId")
                        .HasColumnType("integer");

                    b.Property<string>("Situation")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("LMPastValuations");
                });

            modelBuilder.Entity("ValuationBackend.Models.LMRentalEvidence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AssessmentNo")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("FloorRate")
                        .HasColumnType("text");

                    b.Property<string>("HeadOfTerms")
                        .HasColumnType("text");

                    b.Property<string>("LocationLatitude")
                        .HasColumnType("text");

                    b.Property<string>("LocationLongitude")
                        .HasColumnType("text");

                    b.Property<string>("MasterFileRefNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Occupier")
                        .HasColumnType("text");

                    b.Property<string>("Owner")
                        .HasColumnType("text");

                    b.Property<string>("RatePer")
                        .HasColumnType("text");

                    b.Property<string>("RatePerMonth")
                        .HasColumnType("text");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.Property<int>("ReportId")
                        .HasColumnType("integer");

                    b.Property<string>("Situation")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("LMRentalEvidences");
                });

            modelBuilder.Entity("ValuationBackend.Models.LMSalesEvidence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AssetNumber")
                        .HasColumnType("text");

                    b.Property<string>("Consideration")
                        .HasColumnType("text");

                    b.Property<string>("DeedAttestedNumber")
                        .HasColumnType("text");

                    b.Property<string>("DeedNumber")
                        .HasColumnType("text");

                    b.Property<string>("DescriptionOfProperty")
                        .HasColumnType("text");

                    b.Property<string>("Extent")
                        .HasColumnType("text");

                    b.Property<string>("LandRegistryReferences")
                        .HasColumnType("text");

                    b.Property<string>("LocationLatitude")
                        .HasColumnType("text");

                    b.Property<string>("LocationLongitude")
                        .HasColumnType("text");

                    b.Property<string>("LotNumber")
                        .HasColumnType("text");

                    b.Property<string>("MasterFileRefNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NotaryName")
                        .HasColumnType("text");

                    b.Property<string>("PlanDate")
                        .HasColumnType("text");

                    b.Property<string>("PlanNumber")
                        .HasColumnType("text");

                    b.Property<string>("Rate")
                        .HasColumnType("text");

                    b.Property<string>("RateType")
                        .HasColumnType("text");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.Property<int>("ReportId")
                        .HasColumnType("integer");

                    b.Property<string>("Road")
                        .HasColumnType("text");

                    b.Property<string>("Situation")
                        .HasColumnType("text");

                    b.Property<string>("Vendor")
                        .HasColumnType("text");

                    b.Property<string>("Village")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("LMSalesEvidences");
                });

            modelBuilder.Entity("ValuationBackend.Models.LandMiscellaneousMasterFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("MasterFileNo")
                        .HasColumnType("integer");

                    b.Property<string>("PlanNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PlanType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RequestingAuthorityReferenceNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("LandMiscellaneousMasterFiles");
                });

            modelBuilder.Entity("ValuationBackend.Models.MasterDataItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MasterDataItems");
                });

            modelBuilder.Entity("ValuationBackend.Models.PastValuationsLA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DateOfValuation")
                        .HasColumnType("text");

                    b.Property<string>("Extent")
                        .HasColumnType("text");

                    b.Property<string>("FileNoGNDivision")
                        .HasColumnType("text");

                    b.Property<string>("LocationLatitude")
                        .HasColumnType("text");

                    b.Property<string>("LocationLongitude")
                        .HasColumnType("text");

                    b.Property<string>("MasterFileId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MasterFileRefNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PlanOfParticulars")
                        .HasColumnType("text");

                    b.Property<string>("PurposeOfValuation")
                        .HasColumnType("text");

                    b.Property<string>("Rate")
                        .HasColumnType("text");

                    b.Property<string>("RateType")
                        .HasColumnType("text");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.Property<int>("ReportId")
                        .HasColumnType("integer");

                    b.Property<string>("Situation")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("PastValuationsLA");
                });

            modelBuilder.Entity("ValuationBackend.Models.RatingRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("LocalAuthority")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RatingReferenceNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("RequestType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("YearOfRevision")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("RatingRequests");
                });

            modelBuilder.Entity("ValuationBackend.Models.RentalEvidenceLA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AssessmentNo")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("FloorRateSQFT")
                        .HasColumnType("text");

                    b.Property<string>("HeadOfTerms")
                        .HasColumnType("text");

                    b.Property<string>("LocationLatitude")
                        .HasColumnType("text");

                    b.Property<string>("LocationLongitude")
                        .HasColumnType("text");

                    b.Property<string>("MasterFileId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MasterFileRefNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Occupier")
                        .HasColumnType("text");

                    b.Property<string>("Owner")
                        .HasColumnType("text");

                    b.Property<string>("RatePerMonth")
                        .HasColumnType("text");

                    b.Property<string>("RatePerSqft")
                        .HasColumnType("text");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.Property<int>("ReportId")
                        .HasColumnType("integer");

                    b.Property<string>("Situation")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("RentalEvidencesLA", (string)null);
                });

            modelBuilder.Entity("ValuationBackend.Models.Report", b =>
                {
                    b.Property<int>("ReportId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ReportId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReportType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("ReportId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("ValuationBackend.Models.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("LocalAuthority")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("RatingReferenceNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("RequestTypeId")
                        .HasColumnType("integer");

                    b.Property<bool>("Status")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("YearOfRevision")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RequestTypeId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("ValuationBackend.Models.RequestType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("RequestTypes");
                });

            modelBuilder.Entity("ValuationBackend.Models.SalesEvidenceLA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AssetNumber")
                        .HasColumnType("text");

                    b.Property<string>("Consideration")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DeedAttestedNumber")
                        .HasColumnType("text");

                    b.Property<string>("DeedNumber")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("DescriptionOfProperty")
                        .HasColumnType("text");

                    b.Property<string>("Extent")
                        .HasColumnType("text");

                    b.Property<string>("FloorRate")
                        .HasColumnType("text");

                    b.Property<string>("LandRegistryReferences")
                        .HasColumnType("text");

                    b.Property<string>("LocationLatitude")
                        .HasColumnType("text");

                    b.Property<string>("LocationLongitude")
                        .HasColumnType("text");

                    b.Property<string>("LotNumber")
                        .HasColumnType("text");

                    b.Property<string>("MasterFileId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("MasterFileRefNo")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NotaryName")
                        .HasColumnType("text");

                    b.Property<string>("Occupier")
                        .HasColumnType("text");

                    b.Property<string>("Owner")
                        .HasColumnType("text");

                    b.Property<string>("PlanDate")
                        .HasColumnType("text");

                    b.Property<string>("PlanNumber")
                        .HasColumnType("text");

                    b.Property<string>("Rate")
                        .HasColumnType("text");

                    b.Property<string>("RateType")
                        .HasColumnType("text");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.Property<int>("ReportId")
                        .HasColumnType("integer");

                    b.Property<string>("Road")
                        .HasColumnType("text");

                    b.Property<string>("Situation")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Vendor")
                        .HasColumnType("text");

                    b.Property<string>("Village")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("SalesEvidencesLA", (string)null);
                });

            modelBuilder.Entity("ValuationBackend.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AssignedDivision")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmpEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("EmpName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ValuationBackend.Models.UserTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("boolean");

                    b.Property<string>("TaskType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("UserTasks");
                });

            modelBuilder.Entity("ValuationBackend.Models.Asset", b =>
                {
                    b.HasOne("ValuationBackend.Models.Request", "Request")
                        .WithMany()
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Request");
                });

            modelBuilder.Entity("ValuationBackend.Models.BuildingRatesLA", b =>
                {
                    b.HasOne("ValuationBackend.Models.Report", "Report")
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("ValuationBackend.Models.ConditionReport", b =>
                {
                    b.HasOne("ValuationBackend.Models.Report", "Report")
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("ValuationBackend.Models.InspectionBuilding", b =>
                {
                    b.HasOne("ValuationBackend.Models.InspectionReport", "InspectionReport")
                        .WithMany("Buildings")
                        .HasForeignKey("InspectionReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InspectionReport");
                });

            modelBuilder.Entity("ValuationBackend.Models.InspectionReport", b =>
                {
                    b.HasOne("ValuationBackend.Models.Report", "Report")
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("ValuationBackend.Models.LMBuildingRates", b =>
                {
                    b.HasOne("ValuationBackend.Models.Report", "Report")
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("ValuationBackend.Models.LMPastValuation", b =>
                {
                    b.HasOne("ValuationBackend.Models.Report", "Report")
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("ValuationBackend.Models.LMRentalEvidence", b =>
                {
                    b.HasOne("ValuationBackend.Models.Report", "Report")
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("ValuationBackend.Models.LMSalesEvidence", b =>
                {
                    b.HasOne("ValuationBackend.Models.Report", "Report")
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("ValuationBackend.Models.PastValuationsLA", b =>
                {
                    b.HasOne("ValuationBackend.Models.Report", "Report")
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("ValuationBackend.Models.RentalEvidenceLA", b =>
                {
                    b.HasOne("ValuationBackend.Models.Report", "Report")
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("ValuationBackend.Models.Request", b =>
                {
                    b.HasOne("ValuationBackend.Models.RequestType", "RequestType")
                        .WithMany()
                        .HasForeignKey("RequestTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RequestType");
                });

            modelBuilder.Entity("ValuationBackend.Models.SalesEvidenceLA", b =>
                {
                    b.HasOne("ValuationBackend.Models.Report", "Report")
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("ValuationBackend.Models.InspectionReport", b =>
                {
                    b.Navigation("Buildings");
                });
#pragma warning restore 612, 618
        }
    }
}
