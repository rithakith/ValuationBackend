// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ValuationBackend.Data;

#nullable disable

namespace ValuationBackend.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250524073000_AddReportIdToBuildingRatesLATable")]
    partial class AddReportIdToBuildingRatesLATable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ValuationBackend.Models.BuildingRatesLA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AssessmentNumber")
                        .HasColumnType("text");

                    b.Property<string>("ConstructedBy")
                        .HasColumnType("text");

                    b.Property<string>("Cost")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("DescriptionOfProperty")
                        .HasColumnType("text");

                    b.Property<string>("FloorAreaSQFT")
                        .HasColumnType("text");

                    b.Property<string>("LocationLatitude")
                        .HasColumnType("text");

                    b.Property<string>("LocationLongitude")
                        .HasColumnType("text");

                    b.Property<string>("MasterFileId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Owner")
                        .HasColumnType("text");

                    b.Property<string>("RatePerSQFT")
                        .HasColumnType("text");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.Property<int>("ReportId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("YearOfConstruction")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("BuildingRatesLA", (string)null);
                });

            modelBuilder.Entity("ValuationBackend.Models.BuildingRatesLA", b =>
                {
                    b.HasOne("ValuationBackend.Models.Report", "Report")
                        .WithMany()
                        .HasForeignKey("ReportId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");
                });
#pragma warning restore 612, 618
        }
    }
}
